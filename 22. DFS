#include <stdio.h>
#include <stdlib.h>

#define MAX 10

int stack[MAX], top = -1;
int graph[MAX][MAX], visited[MAX];
int n;

void push(int value) {
    if (top == MAX - 1)
        printf("Stack is full\n");
    else
        stack[++top] = value;
}

int pop() {
    if (top == -1) {
        printf("Stack is empty\n");
        return -1;
    }
    return stack[top--];
}

void dfs(int start) {
    int i;
    push(start);
    visited[start] = 1;

    while (top != -1) {
        int node = pop();
        printf("%d ", node);

        for (i = 0; i < n; i++) {
            if (graph[node][i] == 1 && !visited[i]) {
                push(i);
                visited[i] = 1;
            }
        }
    }
}

int main() {
    int i, j, start;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &graph[i][j]);

    for (i = 0; i < n; i++)
        visited[i] = 0;

    printf("Enter the starting vertex: ");
    scanf("%d", &start);

    printf("DFS Traversal starting from vertex %d: ", start);
    dfs(start);

    return 0;
}

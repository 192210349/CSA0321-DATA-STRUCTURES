#include <stdio.h>
#include <stdlib.h>

#define SIZE 10

// Hash table structure
int hashTable[SIZE];

// Function to initialize the hash table
void initialize() {
    for (int i = 0; i < SIZE; i++) {
        hashTable[i] = -1; // Marking empty slots with -1
    }
}

// Hash function to map a value to an index
int hashFunction(int key) {
    return key % SIZE;
}

// Function to insert a value into the hash table using Linear Probing
void insert(int key) {
    int index = hashFunction(key);

    // Linear probing for finding an empty slot
    int i = 0;
    while (hashTable[(index + i) % SIZE] != -1 && i < SIZE) {
        i++;
    }

    if (i < SIZE) {
        hashTable[(index + i) % SIZE] = key;
        printf("Inserted %d at index %d\n", key, (index + i) % SIZE);
    } else {
        printf("Hash table is full! Unable to insert %d\n", key);
    }
}

// Function to search for a key in the hash table
int search(int key) {
    int index = hashFunction(key);
    int i = 0;

    while (hashTable[(index + i) % SIZE] != -1) {
        if (hashTable[(index + i) % SIZE] == key) {
            return (index + i) % SIZE;
        }
        i++;
    }
    return -1; // Not found
}

// Function to delete a key from the hash table
void delete(int key) {
    int index = search(key);

    if (index != -1) {
        hashTable[index] = -1;
        printf("Deleted %d from index %d\n", key, index);
    } else {
        printf("%d not found in the hash table\n", key);
    }
}

// Function to display the hash table
void display() {
    printf("Hash Table: \n");
    for (int i = 0; i < SIZE; i++) {
        if (hashTable[i] != -1) {
            printf("Index %d: %d\n", i, hashTable[i]);
        } else {
            printf("Index %d: Empty\n", i);
        }
    }
}

int main() {
    initialize();  // Initialize the hash table

    // Inserting values
    insert(10);
    insert(20);
    insert(30);
    insert(15);
    insert(25);
    insert(35);

    // Display the hash table
    display();

    // Searching for a key
    int searchKey = 15;
    int searchResult = search(searchKey);
    if (searchResult != -1) {
        printf("Found %d at index %d\n", searchKey, searchResult);
    } else {
        printf("%d not found in the hash table\n", searchKey);
    }

    // Deleting a key
    delete(20);
    display();

    return 0;
}
